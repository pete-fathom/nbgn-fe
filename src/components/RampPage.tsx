import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { useAppState } from '../contexts/AppContext';
import { useWeb3 } from '../hooks/useWeb3';
import { WalletConnect } from './Web3/WalletConnect';
import { ChainWarning } from './Web3/ChainWarning';
import { useAutoSwap } from '../hooks/useAutoSwap';
import { useRampSwap } from '../hooks/useRampSwap';

export const RampPage: React.FC = () => {
  const { user } = useAppState();
  const { chainId, switchToArbitrum } = useWeb3();
  const [showWidget, setShowWidget] = useState(false);
  const [usdcBalance, setUsdcBalance] = useState('0');
  const [checkingBalance, setCheckingBalance] = useState(true);
  const { isMonitoring, swapStatus, startMonitoring, stopMonitoring } =
    useAutoSwap();
  const {
    getUSDCBalance,
    getEUReBalance,
    swapUSDCToEURe,
    mintNBGNFromEURe,
    loading: swapLoading,
  } = useRampSwap();

  const openFiatRamp = () => {
    if (!user.address) {
      alert('–ú–æ–ª—è, —Å–≤—ä—Ä–∂–µ—Ç–µ –ø—ä—Ä–≤–æ –ø–æ—Ä—Ç—Ñ–µ–π–ª–∞ —Å–∏');
      return;
    }
    setShowWidget(true);
    // Start monitoring for new USDC to auto-convert
    void startMonitoring();
  };

  const getKadoUrl = () => {
    if (!user.address) return '';

    // Kado Money - pre-configured for USDC on Arbitrum with locked selections
    const kadoParams = new URLSearchParams({
      onToAddress: user.address,
      onCurrency: 'USDC',
      onNetwork: 'ARBITRUM',
      offCurrency: 'EUR',
      offAmount: '50',
      mode: 'minimal',
      theme: 'light',
      lockCurrency: 'true',
      lockNetwork: 'true',
      hideOtherCurrencies: 'true',
    });

    return `https://app.kado.money?${kadoParams.toString()}`;
  };

  // Check USDC balance on wallet connection
  useEffect(() => {
    const checkUSDCBalance = async () => {
      if (user.address) {
        setCheckingBalance(true);
        try {
          const balance = await getUSDCBalance(user.address);
          setUsdcBalance(balance);
        } catch (error) {
          console.error('Error checking USDC balance:', error);
        } finally {
          setCheckingBalance(false);
        }
      } else {
        setUsdcBalance('0');
        setCheckingBalance(false);
      }
    };

    void checkUSDCBalance();
  }, [user.address, getUSDCBalance]);

  useEffect(() => {
    // Clean up monitoring when component unmounts
    return () => {
      stopMonitoring();
    };
  }, [stopMonitoring]);

  const handleStep1USDCToEURe = async () => {
    try {
      await swapUSDCToEURe(usdcBalance);
      // Refresh balance after conversion
      const newBalance = await getUSDCBalance(user.address!);
      setUsdcBalance(newBalance);
      alert(
        '‚úÖ –°—Ç—ä–ø–∫–∞ 1 –∑–∞–≤—ä—Ä—à–µ–Ω–∞! USDC –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω –≤ EURe. –°–µ–≥–∞ –Ω–∞—Ç–∏—Å–Ω–µ—Ç–µ –°—Ç—ä–ø–∫–∞ 2.'
      );
    } catch (error) {
      console.error('Step 1 failed:', error);
      alert('–°—Ç—ä–ø–∫–∞ 1 –Ω–µ—É—Å–ø–µ—à–Ω–∞. –ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.');
    }
  };

  const handleStep2EUReToNBGN = async () => {
    try {
      // Get EURe balance first
      const eureBalance = await getEUReBalance(user.address!);
      if (parseFloat(eureBalance) < 0.01) {
        alert('–ù—è–º–∞ –¥–æ—Å—Ç–∞—Ç—ä—á–Ω–æ EURe. –ú–æ–ª—è –ø—ä—Ä–≤–æ –∏–∑–ø—ä–ª–Ω–µ—Ç–µ –°—Ç—ä–ø–∫–∞ 1.');
        return;
      }

      await mintNBGNFromEURe(eureBalance);
      // Refresh balance after conversion
      const newBalance = await getUSDCBalance(user.address!);
      setUsdcBalance(newBalance);
      alert('üéâ –ì–æ—Ç–æ–≤–æ! EURe –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω –≤ NBGN —Ç–æ–∫–µ–Ω–∏!');
    } catch (error) {
      console.error('Step 2 failed:', error);
      alert(
        '–°—Ç—ä–ø–∫–∞ 2 –Ω–µ—É—Å–ø–µ—à–Ω–∞. –ú–æ–ª—è –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ –∏–ª–∏ –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ Exchange —Å–µ–∫—Ü–∏—è—Ç–∞.'
      );
    }
  };

  const hasUSDC = parseFloat(usdcBalance) > 0.01; // More than 1 cent

  return (
    <div className="ramp-page">
      {/* Warning Banner */}
      <div className="ramp-warning-banner">
        <div className="ramp-warning-content">
          <i className="fas fa-exclamation-triangle"></i>
          <div className="ramp-warning-text">
            <strong>–í–ù–ò–ú–ê–ù–ò–ï:</strong> –§–∏–∞—Ç –ø–æ–∫—É–ø–∫–∏—Ç–µ —Å–∞ –≤ –µ–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª–µ–Ω
            —Ä–µ–∂–∏–º. –ò–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ —Å–∞–º–æ –º–∞–ª–∫–∏ —Å—É–º–∏ –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ. –ù–µ —Å–º–µ –æ—Ç–≥–æ–≤–æ—Ä–Ω–∏ –∑–∞
            –∑–∞–≥—É–±–∏.
          </div>
        </div>
      </div>

      {/* Simple Header */}
      <div className="ramp-header">
        <div className="ramp-header-content">
          <div>
            <h1>
              <i className="fas fa-credit-card"></i>
              –ö—É–ø–∏ NBGN
            </h1>
            <p className="ramp-header-subtitle">
              –î–∏—Ä–µ–∫—Ç–Ω–æ —Å –¥–µ–±–∏—Ç–Ω–∞/–∫—Ä–µ–¥–∏—Ç–Ω–∞ –∫–∞—Ä—Ç–∞
            </p>
          </div>
          <a href="/" className="ramp-back-link">
            <i className="fas fa-arrow-left mr-2"></i>
            –ù–∞–∑–∞–¥
          </a>
        </div>
      </div>

      <div className="ramp-container">
        {/* Wallet Connection */}
        {!user.address && (
          <div className="ramp-wallet-card">
            <div className="ramp-wallet-icon">
              <i className="fas fa-wallet"></i>
            </div>
            <h2>–°–≤—ä—Ä–∂–µ—Ç–µ –ø–æ—Ä—Ç—Ñ–µ–π–ª–∞ —Å–∏</h2>
            <p>
              –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –µ –¥–∞ —Å–≤—ä—Ä–∂–µ—Ç–µ –ø–æ—Ä—Ç—Ñ–µ–π–ª–∞ —Å–∏ –∑–∞ –¥–∞ –∫—É–ø–∏—Ç–µ NBGN —Ç–æ–∫–µ–Ω–∏
            </p>
            <WalletConnect />
          </div>
        )}

        {user.address && (
          <>
            {/* Chain Warning */}
            <div style={{ marginBottom: '24px' }}>
              <ChainWarning
                currentChainId={chainId}
                onSwitchChain={switchToArbitrum}
              />
            </div>

            {/* Main Purchase Card */}
            <div className="ramp-main-card">
              {!showWidget ? (
                <div className="ramp-card-content">
                  {checkingBalance ? (
                    <div className="ramp-checking-balance">
                      <div className="ramp-spinner"></div>
                      <h2>–ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ USDC –±–∞–ª–∞–Ω—Å–∞...</h2>
                    </div>
                  ) : hasUSDC ? (
                    <>
                      {/* User has USDC - show continue conversion */}
                      <div
                        className="ramp-coin-icon"
                        style={{ backgroundColor: '#10B981' }}
                      >
                        <i className="fas fa-check-circle"></i>
                      </div>

                      <h2>USDC –Ω–∞–º–µ—Ä–µ–Ω!</h2>

                      <p>
                        –ù–∞–º–µ—Ä–∏—Ö–º–µ {parseFloat(usdcBalance).toFixed(2)} USDC –≤
                        –ø–æ—Ä—Ç—Ñ–µ–π–ª–∞ –≤–∏. –ü—Ä–æ–¥—ä–ª–∂–µ—Ç–µ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞—Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤
                        NBGN —Ç–æ–∫–µ–Ω–∏.
                      </p>

                      <div className="ramp-balance-display">
                        <div className="ramp-balance-item">
                          <span className="ramp-balance-label">
                            –ù–∞–ª–∏—á–Ω–∏ USDC:
                          </span>
                          <span className="ramp-balance-value">
                            {parseFloat(usdcBalance).toFixed(2)} USDC
                          </span>
                        </div>
                      </div>

                      <div className="ramp-two-step-buttons">
                        <button
                          onClick={handleStep1USDCToEURe}
                          className="ramp-step-button"
                          disabled={swapLoading}
                        >
                          {swapLoading ? (
                            <>
                              <div className="ramp-button-spinner"></div>
                              –°—Ç—ä–ø–∫–∞ 1...
                            </>
                          ) : (
                            <>
                              <i className="fas fa-exchange-alt"></i>
                              –°—Ç—ä–ø–∫–∞ 1: USDC ‚Üí EURe
                            </>
                          )}
                        </button>

                        <button
                          onClick={handleStep2EUReToNBGN}
                          className="ramp-step-button"
                          disabled={swapLoading}
                        >
                          {swapLoading ? (
                            <>
                              <div className="ramp-button-spinner"></div>
                              –°—Ç—ä–ø–∫–∞ 2...
                            </>
                          ) : (
                            <>
                              <i className="fas fa-coins"></i>
                              –°—Ç—ä–ø–∫–∞ 2: EURe ‚Üí NBGN
                            </>
                          )}
                        </button>
                      </div>

                      <div
                        className="ramp-liquidity-note"
                        style={{
                          marginTop: '20px',
                          padding: '15px',
                          backgroundColor: '#e3f2fd',
                          borderRadius: '8px',
                          border: '1px solid #90caf9',
                          fontSize: '14px',
                        }}
                      >
                        <h4 style={{ margin: '0 0 10px 0', fontSize: '16px' }}>
                          üí° –ê–ª—Ç–µ—Ä–Ω–∞—Ç–∏–≤–µ–Ω –Ω–∞—á–∏–Ω
                        </h4>
                        <p style={{ margin: '0', fontSize: '14px' }}>
                          –ê–∫–æ –∏–º–∞—Ç–µ –ø—Ä–æ–±–ª–µ–º–∏ —Å USDC ‚Üí EURe –∫–æ–Ω–≤–µ—Ä—Å–∏—è—Ç–∞, –º–æ–∂–µ—Ç–µ
                          –¥–∞ –∫—É–ø–∏—Ç–µ EURe –¥–∏—Ä–µ–∫—Ç–Ω–æ –æ—Ç{' '}
                          <a
                            href="https://monerium.com"
                            target="_blank"
                            rel="noopener noreferrer"
                            style={{ color: '#007bff' }}
                          >
                            Monerium
                          </a>{' '}
                          –∏ —Å–ª–µ–¥ —Ç–æ–≤–∞ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ <strong>Exchange</strong>{' '}
                          —Å–µ–∫—Ü–∏—è—Ç–∞ –Ω–∞ —Ç–æ–∑–∏ —Å–∞–π—Ç –∑–∞ –¥–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞—Ç–µ EURe ‚Üí NBGN.
                        </p>
                      </div>

                      <div className="ramp-conversion-note">
                        <i className="fas fa-info-circle"></i>
                        –ü—Ä–æ—Ü–µ—Å –≤ 2 —Å—Ç—ä–ø–∫–∏: USDC ‚Üí EURe ‚Üí NBGN
                      </div>
                    </>
                  ) : (
                    <>
                      {/* No USDC - show normal flow */}
                      <div className="ramp-coin-icon">
                        <i className="fas fa-coins"></i>
                      </div>

                      <h2>–ö—É–ø–µ—Ç–µ NBGN —Ç–æ–∫–µ–Ω–∏</h2>

                      <p>
                        –ö—É–ø–µ—Ç–µ NBGN —Ç–æ–∫–µ–Ω–∏ –¥–∏—Ä–µ–∫—Ç–Ω–æ —Å –¥–µ–±–∏—Ç–Ω–∞ –∏–ª–∏ –∫—Ä–µ–¥–∏—Ç–Ω–∞
                        –∫–∞—Ä—Ç–∞. –ü—Ä–æ—Ü–µ—Å—ä—Ç –µ –±—ä—Ä–∑, —Å–∏–≥—É—Ä–µ–Ω –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ–Ω.
                      </p>

                      <div className="ramp-waiting-note">
                        <i className="fas fa-info-circle"></i>
                        <p>
                          <strong>
                            –ê–∫–æ —Å—Ç–µ –∑–∞—è–≤–∏–ª–∏ USDC –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 15 –º–∏–Ω—É—Ç–∏:
                          </strong>{' '}
                          –ò–∑—á–∞–∫–∞–π—Ç–µ –º–∞–ª–∫–æ –ø–æ–≤–µ—á–µ –≤—Ä–µ–º–µ.
                          <br />
                          <strong>–ê–∫–æ –µ –º–∏–Ω–∞–ª —á–∞—Å:</strong> –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ç–∞
                          –≤–µ—Ä–æ—è—Ç–Ω–æ –µ –æ—Ç—Ö–≤—ä—Ä–ª–µ–Ω–∞ –æ—Ç –±–∞–Ω–∫–∞—Ç–∞ –≤–∏ - –æ–ø–∏—Ç–∞–π—Ç–µ –æ—Ç–Ω–æ–≤–æ.
                        </p>
                      </div>
                    </>
                  )}

                  {/* Auto-conversion status */}
                  {isMonitoring && (
                    <div className="ramp-status-box">
                      <div className="ramp-spinner"></div>
                      <span className="ramp-status-text">
                        {swapStatus === 'detecting' &&
                          '–°–ª–µ–¥–∏–º –∑–∞ –ø–æ–∫—É–ø–∫–∞ –Ω–∞ USDC...'}
                        {swapStatus === 'swapping' &&
                          '–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–º–µ USDC –≤ NBGN...'}
                        {swapStatus === 'completed' &&
                          '–ì–æ—Ç–æ–≤–æ! NBGN —Ç–æ–∫–µ–Ω–∏—Ç–µ —Å–∞ –≤ –ø–æ—Ä—Ç—Ñ–µ–π–ª–∞ –≤–∏'}
                        {swapStatus === 'error' &&
                          '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è - –æ–ø–∏—Ç–∞–π—Ç–µ —Ä—ä—á–Ω–æ'}
                      </span>
                    </div>
                  )}

                  {/* Show automatic process only if no USDC */}
                  {!hasUSDC && !checkingBalance && (
                    <>
                      {/* Maximally Automatic Process */}
                      <div className="ramp-automatic-process">
                        <h3>
                          <i className="fas fa-magic"></i>
                          –ù–∞–ø—ä–ª–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ–Ω –ø—Ä–æ—Ü–µ—Å!
                        </h3>
                        <div className="ramp-automatic-box">
                          <div className="ramp-automatic-item">
                            <div className="ramp-automatic-icon">üí≥</div>
                            <div className="ramp-automatic-text">
                              <strong>
                                –°–∞–º–æ –≤—ä–≤–µ–¥–µ—Ç–µ –¥–∞–Ω–Ω–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–∞—Ç–∞ —Å–∏
                              </strong>
                              <p>–í—Å–∏—á–∫–æ –æ—Å—Ç–∞–Ω–∞–ª–æ —Å–µ —Å–ª—É—á–≤–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ</p>
                            </div>
                          </div>
                          <div className="ramp-automatic-arrow">‚Üí</div>
                          <div className="ramp-automatic-item">
                            <div className="ramp-automatic-icon">üîÑ</div>
                            <div className="ramp-automatic-text">
                              <strong>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è</strong>
                              <p>EUR ‚Üí USDC ‚Üí EURe ‚Üí NBGN</p>
                            </div>
                          </div>
                          <div className="ramp-automatic-arrow">‚Üí</div>
                          <div className="ramp-automatic-item">
                            <div className="ramp-automatic-icon">üéâ</div>
                            <div className="ramp-automatic-text">
                              <strong>NBGN –≤ –ø–æ—Ä—Ç—Ñ–µ–π–ª–∞ –≤–∏!</strong>
                              <p>–ì–æ—Ç–æ–≤–æ –∑–∞ 10-15 –º–∏–Ω—É—Ç–∏</p>
                            </div>
                          </div>
                        </div>
                      </div>

                      <button
                        onClick={openFiatRamp}
                        className="ramp-buy-button"
                      >
                        <i className="fas fa-credit-card"></i>
                        –ö—É–ø–∏ NBGN —Å –∫–∞—Ä—Ç–∞
                      </button>

                      <p className="ramp-supported-text">
                        –ü–æ–¥–¥—ä—Ä–∂–∞–Ω–∏ —Å–∞ –∫–∞—Ä—Ç–∏ –æ—Ç –ë—ä–ª–≥–∞—Ä–∏—è –∏ –ï–°
                      </p>
                    </>
                  )}

                  {/* Resume monitoring button for users who already used fiat ramp */}
                  {hasUSDC && (
                    <div className="ramp-resume-section">
                      <p className="ramp-resume-text">
                        <i className="fas fa-lightbulb"></i>
                        –ò–ª–∏ –∫—É–ø–µ—Ç–µ –æ—â–µ USDC –∑–∞ –ø–æ–≤–µ—á–µ NBGN —Ç–æ–∫–µ–Ω–∏:
                      </p>
                      <button
                        onClick={() => {
                          setShowWidget(true);
                          void startMonitoring();
                        }}
                        className="ramp-resume-button"
                        disabled={isMonitoring}
                      >
                        <i className="fas fa-plus"></i>
                        {isMonitoring
                          ? '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—ä—Ç –µ –∞–∫—Ç–∏–≤–µ–Ω'
                          : '–ö—É–ø–∏ –æ—â–µ USDC'}
                      </button>
                    </div>
                  )}
                </div>
              ) : (
                <div>
                  <div className="ramp-widget-header">
                    <h3>–ö—É–ø–µ—Ç–µ NBGN —Ç–æ–∫–µ–Ω–∏ - Kado</h3>
                    <button
                      onClick={() => setShowWidget(false)}
                      className="ramp-close-button"
                    >
                      <i className="fas fa-times"></i>
                    </button>
                  </div>

                  <div className="ramp-widget-container">
                    <iframe
                      src={getKadoUrl()}
                      className="ramp-widget-iframe"
                      frameBorder="0"
                      allow="payment; usb; ethereum; web3"
                      title="–ö—É–ø–µ—Ç–µ NBGN —Ç–æ–∫–µ–Ω–∏"
                      sandbox="allow-same-origin allow-scripts allow-popups allow-forms allow-top-navigation"
                    />
                  </div>

                  <div className="ramp-widget-help">
                    <p>
                      <i className="fas fa-clock"></i>
                      –ü–æ—Ä—ä—á–∫–∞—Ç–∞ –æ–±–∏–∫–Ω–æ–≤–µ–Ω–æ –æ—Ç–Ω–µ–º–∞ 10-15 –º–∏–Ω—É—Ç–∏ –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞.
                      –°–ª–µ–¥ –ø–æ–ª—É—á–∞–≤–∞–Ω–µ –Ω–∞ USDC, –º–æ–∂–µ –¥–∞ –≥–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞—Ç–µ –≤ NBGN –Ω–∞
                      —Ç–∞–∑–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞.
                    </p>
                    <Link to="/" className="ramp-home-button">
                      <i className="fas fa-home"></i>
                      –û–±—Ä–∞—Ç–Ω–æ –∫—ä–º –Ω–∞—á–∞–ª–æ—Ç–æ
                    </Link>
                  </div>
                </div>
              )}
            </div>

            {/* Info Section */}
            <div className="ramp-info-box">
              <i className="fas fa-shield-alt"></i>
              <div className="ramp-info-content">
                <h3>–°–∏–≥—É—Ä–Ω–∞ –∏ –Ω–∞–¥–µ–∂–¥–Ω–∞ –ø–æ–∫—É–ø–∫–∞</h3>
                <p>
                  –ò–∑–ø–æ–ª–∑–≤–∞–º–µ –≤–æ–¥–µ—â–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∏ –∑–∞ —Å–∏–≥—É—Ä–Ω–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—É—Ç–Ω–∏ –ø–æ–∫—É–ø–∫–∏.
                  –í–∞—à–∏—Ç–µ –¥–∞–Ω–Ω–∏ —Å–∞ –∑–∞—â–∏—Ç–µ–Ω–∏ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏—Ç–µ —Å–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏.
                </p>
              </div>
            </div>
          </>
        )}
      </div>
    </div>
  );
};
